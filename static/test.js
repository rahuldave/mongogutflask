// Generated by CoffeeScript 1.6.1
(function() {
  var A, Backbone, Postable, PostableList, a, out, out2, p, pl, teacup, u, _i, _len, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Backbone = require('./backbone');

  teacup = require('./teacup');

  Postable = (function(_super) {

    __extends(Postable, _super);

    function Postable() {
      return Postable.__super__.constructor.apply(this, arguments);
    }

    return Postable;

  })(Backbone.Model);

  PostableList = (function(_super) {

    __extends(PostableList, _super);

    function PostableList() {
      return PostableList.__super__.constructor.apply(this, arguments);
    }

    PostableList.prototype.model = Postable;

    PostableList.prototype.initialize = function(mod, opt) {
      this.listtype = opt.listtype;
      return this.invite = opt.invite;
    };

    return PostableList;

  })(Backbone.Collection);

  A = ['a', 'b'];

  pl = new PostableList([], {
    listtype: 'in',
    invite: false
  });

  pl.add((function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = A.length; _i < _len; _i++) {
      p = A[_i];
      _results.push(new Postable({
        fqpn: p,
        invite: pl.invite
      }));
    }
    return _results;
  })());

  console.log("GG", pl);

  _ref = pl.models;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    p = _ref[_i];
    console.log("FF", p.get('fqpn'));
  }

  out = teacup.render(function() {
    return teacup.raw("ram");
  });

  out2 = teacup.h1("hello");

  console.log(">>", out, "<<", typeof out, out2, typeof out2);

  a = {
    a: 1,
    b: 2
  };

  console.log((function() {
    var _results;
    _results = [];
    for (u in a) {
      _results.push(u);
    }
    return _results;
  })());

}).call(this);
